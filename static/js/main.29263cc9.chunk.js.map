{"version":3,"sources":["utils/API.js","components/Table.js","components/InputField.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Table","props","className","isLoaded","empData","map","emp","idx","name","first","last","medium","picture","location","city","country","src","InputField","type","onChange","e","handleSearch","target","value","placeholder","aria-label","aria-describedby","App","useState","setEmpData","filteredEmpData","setFilteredEmpData","setIsLoaded","useEffect","API","then","res","data","results","catch","error","console","log","href","query","toLowerCase","result","filter","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEe,EACH,WACJ,OAAOA,IAAMC,IAAI,2C,oBCyCVC,MAtCf,SAAgBC,GAEZ,OACI,qBAAKC,UAAU,YAAf,SACA,kCACI,gCACI,+BACA,uCACA,4CACA,2CACA,sCACA,8CAIJ,gCACCD,EAAME,SAAWF,EAAMG,QAAQC,KAAI,SAACC,EAAIC,GAC3C,MAAoBD,EAAIE,KAAnBC,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,KACPC,EAAUL,EAAIM,QAAdD,OACL,EAAsBL,EAAIO,SAArBC,EAAL,EAAKA,KAAMC,EAAX,EAAWA,QAEX,OACI,+BACI,6BAAI,qBAAKC,IAAKL,MACd,6BAAKF,IACL,6BAAKC,IACL,6BAAKI,IACL,6BAAKC,MALAR,MASV,+BClBEU,EAfI,SAAChB,GAKlB,OACE,sBAAKC,UAAU,uBAAf,UACF,uBAAOgB,KAAK,OAAOhB,UAAU,eAAeiB,SANhB,SAACC,GACzBnB,EAAMoB,aAAaD,EAAEE,OAAOC,QAKyCC,YAAY,iBAAiBC,aAAW,GAAGC,mBAAiB,iBACrI,qBAAKxB,UAAU,2BC0CFyB,MA/Cf,WACA,MAA8BC,mBAAS,IAAvC,mBAAOxB,EAAP,KAAgByB,EAAhB,KACA,EAA8CD,mBAASxB,GAAvD,mBAAO0B,EAAP,KAAwBC,EAAxB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOzB,EAAP,KAAiB6B,EAAjB,KA+BE,OAZAC,qBAAU,WACH9B,GACH+B,IAAaC,MAAK,SAACC,GACjBP,EAAWO,EAAIC,KAAKC,SACpBP,EAAmBK,EAAIC,KAAKC,SAC5BN,GAAY,KACb,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAI,2BAGf,IAED,sBAAKxC,UAAU,MAAf,UACJ,qBAAKA,UAAU,mCAAf,SACE,qBAAKA,UAAU,gDAAf,SACE,mBAAGA,UAAU,2CAA2CyC,KAAK,IAA7D,gCAGJ,cAAC,EAAD,CAAYzC,UAAU,gCAA+B4B,gBAAiBA,EAAiBT,aApClE,SAAAuB,GACnB,GAAGA,EAAM,CACP,IAAIrB,EAAQqB,EAAMC,cAClBJ,QAAQC,IAAInB,GACZ,IAAIuB,EACJA,EAAS1C,EAAQ2C,QAAO,SAACzC,GACxB,OAAOA,EAAIE,KAAKC,MAAMoC,cAAcG,SAASzB,IAAUjB,EAAIE,KAAKE,KAAKmC,cAAcG,SAASzB,IAAUjB,EAAIO,SAASE,QAAQ8B,cAAcG,SAASzB,IAAUjB,EAAIO,SAASC,KAAK+B,cAAcG,SAASzB,MAEtMQ,EAAmBe,QACd,IAAKF,EAEV,OADAb,EAAmB3B,GACZA,EAAQ2C,QAAO,SAACzC,GACrB,OAAO,QAyBb,cAAC,EAAD,CAAOH,SAAUA,EAAUC,QAAS0B,QCtCrBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.29263cc9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default { \n    getEmp: () => {\n        return axios.get(\"https://randomuser.me/api/?results=100\");\n    }\n}","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Table.css';\n\n\n\n\nfunction Table (props){\n\n    return (\n        <div className=\"container\">\n        <table >\n            <thead>\n                <tr>\n                <th>Photo</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>City</th>\n                <th>Country</th>           \n\n                </tr>\n            </thead>\n            <tbody>\n            {props.isLoaded ? props.empData.map((emp,idx) => {\n          let {first, last} = emp.name\n          let {medium} = emp.picture\n          let {city, country} = emp.location\n      \n          return (\n              <tr key={idx}>\n                  <td><img src={medium}></img></td>\n                  <td>{first}</td>\n                  <td>{last}</td>\n                  <td>{city}</td>\n                  <td>{country}</td>\n\n              </tr>\n          )\n        }) : <tr></tr>}\n            </tbody>\n        </table>\n        </div>\n    )\n}\n\nexport default Table;","import React, { useState, useEffect, useRef } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { propTypes } from \"react-bootstrap/esm/Image\";\n\n\nconst InputField = (props) => {\n    const handleInputChange = (e) => {\n      props.handleSearch(e.target.value);\n    }\n\n  return (\n    <div className=\"input-group mb-3 p-3\">\n  <input type=\"text\" className=\"form-control\" onChange={handleInputChange} placeholder=\"Search here...\" aria-label=\"\" aria-describedby=\"basic-addon2\"></input>\n  <div className=\"input-group-append\">\n  </div>\n  </div>\n\n  );\n}\n\nexport default InputField;","import './App.css';\nimport API from \"./utils/API\";\nimport React, {useState,useEffect} from \"react\";\nimport Table from './components/Table';\nimport InputField from './components/InputField';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\nconst [empData, setEmpData] = useState(\"\");\nconst [filteredEmpData, setFilteredEmpData] = useState(empData);\nconst [isLoaded, setIsLoaded] = useState(false);\n\nconst handleSearch = query => {\n  if(query){\n    let value = query.toLowerCase();\n    console.log(value);\n    let result = [];\n    result = empData.filter((emp)=> {\n     return emp.name.first.toLowerCase().includes(value) || emp.name.last.toLowerCase().includes(value) || emp.location.country.toLowerCase().includes(value) || emp.location.city.toLowerCase().includes(value);\n    }) \n    setFilteredEmpData(result);\n  } else if (!query){\n    setFilteredEmpData(empData);\n    return empData.filter((emp)=> {\n      return true;\n     }) \n  }\n}\n\n  useEffect(() => {\n    if (!isLoaded){\n      API.getEmp().then((res) => {\n        setEmpData(res.data.results)\n        setFilteredEmpData(res.data.results)\n        setIsLoaded(true);\n    }, [])\n      .catch(error => {\n        console.log('Error getting data')\n      })\n  }\n  }, [])\n  return (\n    <div className=\"App\">\n<nav className=\"navbar navbar-light bg-secondary\">\n  <div className=\"container-fluid d-flex justify-content-center\">\n    <a className=\"navbar-brand text-light font-weight-bold\" href=\"#\">User Directory</a>\n  </div>\n</nav>\n<InputField className=\"d-flex justify-content-center\"filteredEmpData={filteredEmpData} handleSearch={handleSearch}/>     \n<Table isLoaded={isLoaded} empData={filteredEmpData}/>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}